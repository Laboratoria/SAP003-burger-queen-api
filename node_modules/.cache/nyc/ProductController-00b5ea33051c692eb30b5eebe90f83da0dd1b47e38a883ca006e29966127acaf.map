{"version":3,"sources":["ProductController.js"],"names":["util","Util","ProductController","req","res","ProductService","getAllProducts","allProducts","length","setSuccess","send","setError","body","name","price","product_type","breakfast","newProduct","addProduct","createdProduct","message","alteredProduct","id","params","Number","updateProduct","getProduct","theProduct","deleteProduct","productToDelete"],"mappings":"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","sourceRoot":"/app/api/server/controllers","sourcesContent":["import ProductService from '../services/ProductService'\nimport Util from '../utils/Utils'\n\nconst util = new Util()\n\nclass ProductController {\n  static async getAllProducts(req, res) {\n    try {\n      const allProducts = await ProductService.getAllProducts()\n      if (allProducts.length > 0) {\n        util.setSuccess(200, 'Products retrieved', allProducts)\n      } else {\n        util.setSuccess(200, 'No Product found')\n      }\n      return util.send(res)\n    } catch (error) {\n      util.setError(400, error)\n      return util.send(res)\n    }\n  }\n\n  static async addProduct(req, res) {\n    if (!req.body.name || !req.body.price || !req.body.product_type || typeof req.body.breakfast !== 'boolean') {\n      util.setError(400, 'Please provide complete details')\n      return util.send(res)\n    }\n    const newProduct = req.body\n    try {\n      const createdProduct = await ProductService.addProduct(newProduct)\n      util.setSuccess(201, 'Product Added!', createdProduct)\n      return util.send(res)\n    } catch (error) {\n      util.setError(400, error.message)\n      return util.send(res)\n    }\n  }\n\n  static async updatedProduct(req, res) {\n    const alteredProduct = req.body\n    const { id } = req.params\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid numeric value')\n      return util.send(res)\n    }\n    try {\n      const updateProduct = await ProductService.updateProduct(id, alteredProduct)\n      if (!updateProduct) {\n        util.setError(404, `Cannot find Product with the id: ${id}`)\n      } else {\n        util.setSuccess(200, 'Product updated', updateProduct)\n      }\n      return util.send(res)\n    } catch (error) {\n      util.setError(404, error)\n      return util.send(res)\n    }\n  }\n\n  static async getProduct(req, res) {\n    const { id } = req.params\n\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid numeric value')\n      return util.send(res)\n    }\n\n    try {\n      const theProduct = await ProductService.getProduct(id)\n\n      if (!theProduct) {\n        util.setError(404, `Cannot find Product with the id ${id}`)\n      } else {\n        util.setSuccess(200, 'Found Product', theProduct)\n      }\n      return util.send(res)\n    } catch (error) {\n      util.setError(404, error)\n      return util.send(res)\n    }\n  }\n\n  static async deleteProduct(req, res) {\n    const { id } = req.params\n\n    if (!Number(id)) {\n      util.setError(400, 'Please provide a numeric value')\n      return util.send(res)\n    }\n\n    try {\n      const productToDelete = await ProductService.deleteProduct(id)\n\n      if (productToDelete) {\n        util.setSuccess(200, 'Product deleted')\n      } else {\n        util.setError(404, `Product with the id ${id} cannot be found`)\n      }\n      return util.send(res)\n    } catch (error) {\n      util.setError(400, error)\n      return util.send(res)\n    }\n  }\n}\n\nexport default ProductController"]}